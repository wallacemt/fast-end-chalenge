name: fast-end-ci

on: 
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
     branches:
        - 'main'

jobs: 
  grype:
    name: grype
    runs-on: ubuntu-latest
    steps: 
      - name: checkout source code
        uses: actions/checkout@v4
      - name: scan current project
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "."
          fail-build: false
          output-format: table

  bearer:
    name: bearer
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout source code  
        uses: actions/checkout@v4
      - name: Run Report
        id: Report
        uses: bearer/bearer-action@v2
        with: 
          exit-code: 0
    
  docker:
    name: Docker build and publish
    runs-on: ubuntu-latest
    needs:
      - grype
      - bearer
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3    

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name:  Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metada (tags and labels) for Docker
        id: tag
        uses: docker/metadata-action@v5
        with:
          images: wallacestm/fast-end-ch
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr,prefix=PR-
            type=sha
      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with: 
          push: true
          tags: ${{ steps.tag.outputs.tags }}
          labels: ${{ steps.tag.outputs.labels }}
      
      - name: Format Tags for PR comment
        if: github.event_name == 'pull_request'
        id: format_tags
        run: | 
          TAGS_BODY=$(echo "${{ steps.tag.outputs.tags }}" | sed 's/,/\n/g')
          echo "comment_body<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create or update PR comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with: 
          token: ${{ secrets.TOKEN_GITHUB }}
          comment-identifier: "docker-publish-tags-comment"
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## âœ… Imagem publicada com sucesso!
            **Tags publicadas:**
            ```
            ${{ steps.format_tags.outputs.comment_body }}
  deployment:
    name: Deployment trigger
    runs-on: ubuntu-latest
    needs: 
      - docker
    steps:
      - name: Disparar deployment em dev
        uses: benc-uk/workflow-dispatch@v1
        env:
          IMAGE_TAG: ${{ github.event.number == 0 && 'latest' || format('PR-{0}', github.event.number) }}
        with: 
          workflow: cd.yaml
          inputs: '{"environment": "dev", "imageTag": "${{ env.IMAGE_TAG }}"}'
          token: ${{ secrets.TOKEN_GITHUB }}